CREATE SCHEMA GPPractice;
USE GPPractice;

-- Drop tables if they exist
DROP TABLE IF EXISTS Prescription;
DROP TABLE IF EXISTS Appointment;
DROP TABLE IF EXISTS Patient;
DROP TABLE IF EXISTS Medication;
DROP TABLE IF EXISTS Staff;

-- Create Staff table
CREATE TABLE Staff (
    sID INTEGER NOT NULL,
    sType VARCHAR(32) NOT NULL,
    sName VARCHAR(32) NOT NULL,
    PRIMARY KEY (sID)
);

-- Create Medication table
CREATE TABLE Medication (
    mID INTEGER NOT NULL,
    mName VARCHAR(32) NOT NULL,
    mDosage VARCHAR(32) NOT NULL,
    PRIMARY KEY (mID)
);

-- Create Patient table
CREATE TABLE Patient (
    pID INTEGER NOT NULL,
    pName VARCHAR(32) NOT NULL,
    pAddress VARCHAR(32),
    pDOB DATE,
    pNHSNo VARCHAR(32) NOT NULL,
    PRIMARY KEY (pID)
);

-- Create Appointment table
CREATE TABLE Appointment (
    aDate DATE NOT NULL,
    aTime TIME NOT NULL,  
    Patient_pID INTEGER,
    Staff_sID INTEGER,
    FOREIGN KEY (Patient_pID) REFERENCES Patient(pID),
    FOREIGN KEY (Staff_sID) REFERENCES Staff(sID)
);

-- Create Prescription table
CREATE TABLE Prescription (
    presID INTEGER NOT NULL,
    presDate DATE NOT NULL,
    presDose INTEGER NOT NULL,
    presAmount DECIMAL(10,2) NOT NULL,
    Medication_mID INTEGER,
    Staff_sID INTEGER,
    Patient_pID INTEGER,
    PRIMARY KEY (presID),
    FOREIGN KEY (Medication_mID) REFERENCES Medication(mID),
    FOREIGN KEY (Staff_sID) REFERENCES Staff(sID),
    FOREIGN KEY (Patient_pID) REFERENCES Patient(pID)
);

-- INSERT STATEMENTS
INSERT INTO Staff (sID, sType, sName) VALUES
(1, 'Nurse', 'Yasser Crimp'),
(2, 'Nurse', 'Jane Smith'),
(3, 'GP', 'Jane Jones');

-- output check
-- select sID, sType, sName from Staff;


INSERT INTO Medication (mID, mName, mDosage) VALUES
(1, 'Atenolol', '50mg'),
(2, 'Amitriptyline', '20ml');
 
 -- output check
-- select mID, mName, mDosage from Medication;

INSERT INTO Patient (pID, pName, pAddress, pDOB, pNHSNo) VALUES
(1, 'Wayne Bow', '1 The Sidings, Canterbury', '1985-02-13', '2383010'),
(2, 'Sue Flay', '34 High Street, Maidstone', '1927-11-01', '2923010'),
(3, 'Mike Drop', '23 Mount Street, Faversham', '1987-05-21', '8408010'),
(4, 'Sue Flay', '3 The Sidings, Canterbury', '1979-09-01', '5457798');

-- output check
-- SELECT TIMESTAMPDIFF(YEAR, pDOB, CURDATE()) AS Age FROM Patient;

INSERT INTO Appointment (aDate, aTime, Patient_pID, Staff_sID) VALUES
('2024-11-01', '15:40', 1, 2),
('2024-11-01', '09:30', 3, 2),
('2023-10-30', '12:45', 2, 3),
('2024-02-29', '11:10', 2, 1),
('2023-05-12', '14:50', 4, 3);

-- output check
-- select * from Appointment;

INSERT INTO Prescription (presID, presDate, presDose, presAmount, Medication_mID, Staff_sID, Patient_pID) VALUES
(1, '2024-11-01', 2, 9.00, 1, 2, 1), 
(2, '2024-11-01', 1, 9.80, 2, 2, 3),
(3, '2024-02-29', 1, 4.50, 1, 1, 2),  
(4, '2024-02-29', 1, 9.80, 2, 1, 2),
(5, '2023-05-19', 1, 4.50, 1, 3, 4);

-- TASK 2
-- Question A : Retrieve all the information about medications prescribed to patients living in Canterbury.
select 
presID as Prescription_ID,
presDate as Prescription_Date,
presDose as Number_of_Doses,
presAmount as Prescription_Amount,
Medication_mID as Medication_ID,
Medication.mName as Medication_Name,
Medication.mDosage as Medication_Dosage,
Patient_pID as Patient_ID,
Patient.pName as Patient_Name,
Patient.pAddress as Patient_Address
from Prescription
left join Medication on Medication.mID = Prescription.Medication_mID
left join Patient on Patient.pID = Prescription.Patient_pID
where Patient.pAddress like '% Canterbury'
;

-- Question B: List the patient name, the medication name, and the date the prescription was issued sorted 
-- by most recent prescription date (most recent should be at the top of your results).
select
Patient.pName as Patient_Name,
Medication.mName as Medication_Name,
presDate as Prescription_Date
from Prescription
left join Medication on Medication.mID = Prescription.Medication_mID
left join Patient on Patient.pID = Prescription.Patient_pID
order by presDate desc
;

/* Question C: List the staff member names and the total value/price of prescription issued by each of them.*/
select
Staff.sName as Staff_Name,
SUM(presAmount) as Total_Value_of_Prescriptions
from Prescription
left join Staff on Staff.sID = Prescription.Staff_sID
group by Staff.sName
;

/* Question D: List the name of the patient, the date and time of their appointment, and the name of the
staff who saw them for those appointments taking place before the end of March 2024. 
Order your results alphabetically by staff name.*/
select
Patient.pName as Patient_Name,
aDate as Appointment_Date,
aTime as Appointment_Time,
Staff.sName as Staff_Name
from Appointment
left join Patient on Patient.pID = Appointment.Patient_pID
left join Staff on Staff.sID = Appointment.Staff_sID
where aDate < '2024-03-31'
order by Staff.sName ASC
;
